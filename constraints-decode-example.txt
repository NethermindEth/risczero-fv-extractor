module {
  func.func @computeDecode(%arg0: !cirgen.buffer<1, constant> {cirgen.argName = "in"}, %arg1: !cirgen.buffer<18, mutable> {cirgen.argName = "data"}) -> !cirgen.constraint {
    %0 = cirgen.const 1
    %1 = cirgen.const 2
    %2 = cirgen.const 3
    %3 = cirgen.const 4
    %4 = cirgen.const 128
    %5 = cirgen.const 16
    %6 = cirgen.const 8
    %7 = cirgen.const 64
    %8 = cirgen.true
    %9 = cirgen.get %arg1[13] back 0 : <18, mutable>
    %10 = cirgen.get %arg1[0] back 0 : <18, mutable>
    %11 = cirgen.get %arg1[8] back 0 : <18, mutable>
    %12 = cirgen.mul %11 : <default>, %3 : <default>
    %13 = cirgen.get %arg1[9] back 0 : <18, mutable>
    %14 = cirgen.mul %13 : <default>, %6 : <default>
    %15 = cirgen.get %arg1[1] back 0 : <18, mutable>
    %16 = cirgen.mul %15 : <default>, %5 : <default>
    %17 = cirgen.add %16 : <default>, %14 : <default>
    %18 = cirgen.add %17 : <default>, %12 : <default>
    %19 = cirgen.add %18 : <default>, %10 : <default>
    %20 = cirgen.get %arg1[10] back 0 : <18, mutable>
    %21 = cirgen.mul %20 : <default>, %7 : <default>
    %22 = cirgen.add %21 : <default>, %19 : <default>
    %23 = cirgen.mul %22 : <default>, %1 : <default>
    %24 = cirgen.add %23 : <default>, %9 : <default>
    %25 = cirgen.sub %3 : <default>, %24 : <default>
    %26 = cirgen.and_eqz %8, %25 : <default>
    %27 = cirgen.get %arg1[3] back 0 : <18, mutable>
    %28 = cirgen.get %arg1[4] back 0 : <18, mutable>
    %29 = cirgen.mul %28 : <default>, %3 : <default>
    %30 = cirgen.get %arg1[11] back 0 : <18, mutable>
    %31 = cirgen.get %arg1[2] back 0 : <18, mutable>
    %32 = cirgen.mul %31 : <default>, %1 : <default>
    %33 = cirgen.get %arg1[12] back 0 : <18, mutable>
    %34 = cirgen.mul %33 : <default>, %6 : <default>
    %35 = cirgen.add %34 : <default>, %32 : <default>
    %36 = cirgen.add %35 : <default>, %30 : <default>
    %37 = cirgen.mul %36 : <default>, %5 : <default>
    %38 = cirgen.add %37 : <default>, %29 : <default>
    %39 = cirgen.add %38 : <default>, %27 : <default>
    %40 = cirgen.sub %2 : <default>, %39 : <default>
    %41 = cirgen.and_eqz %26, %40 : <default>
    %42 = cirgen.get %arg1[6] back 0 : <18, mutable>
    %43 = cirgen.get %arg1[7] back 0 : <18, mutable>
    %44 = cirgen.mul %43 : <default>, %3 : <default>
    %45 = cirgen.get %arg1[5] back 0 : <18, mutable>
    %46 = cirgen.get %arg1[15] back 0 : <18, mutable>
    %47 = cirgen.mul %46 : <default>, %3 : <default>
    %48 = cirgen.add %47 : <default>, %45 : <default>
    %49 = cirgen.mul %48 : <default>, %5 : <default>
    %50 = cirgen.get %arg1[14] back 0 : <18, mutable>
    %51 = cirgen.mul %50 : <default>, %4 : <default>
    %52 = cirgen.add %51 : <default>, %49 : <default>
    %53 = cirgen.add %52 : <default>, %44 : <default>
    %54 = cirgen.add %53 : <default>, %42 : <default>
    %55 = cirgen.sub %1 : <default>, %54 : <default>
    %56 = cirgen.and_eqz %41, %55 : <default>
    %57 = cirgen.get %arg1[17] back 0 : <18, mutable>
    %58 = cirgen.get %arg1[16] back 0 : <18, mutable>
    %59 = cirgen.mul %58 : <default>, %4 : <default>
    %60 = cirgen.add %59 : <default>, %57 : <default>
    %61 = cirgen.sub %0 : <default>, %60 : <default>
    %62 = cirgen.and_eqz %56, %61 : <default>
    return %62 : !cirgen.constraint
  }
}