module {
  func.func @IsZero(%arg0: !cirgen.buffer<1, constant> {cirgen.argName = "in"}, %arg1: !cirgen.buffer<2, mutable> {cirgen.argName = "data"}) {
    %0 = cirgen.const 1
    %1 = cirgen.get %arg0[0] back 0 : <1, constant>
    cirgen.nondet {
      %4 = cirgen.isz %1 : <default>
      cirgen.set %arg1 : <2, mutable>[0] = %4 : <default>
      %5 = cirgen.inv %1 : <default>
      cirgen.set %arg1 : <2, mutable>[1] = %5 : <default>
    }
    %2 = cirgen.get %arg1[0] back 0 : <2, mutable>
    cirgen.if %2 : <default> {
      cirgen.eqz %1 : <default>
    }
    %3 = cirgen.sub %0 : <default>, %2 : <default>
    cirgen.if %3 : <default> {
      %4 = cirgen.get %arg1[1] back 0 : <2, mutable>
      %5 = cirgen.mul %1 : <default>, %4 : <default>
      %6 = cirgen.sub %5 : <default>, %0 : <default>
      cirgen.eqz %6 : <default>
    }
    return
  }
}