module {
  func.func @OneHot1(%arg0: !cirgen.buffer<1, constant> {cirgen.argName = "code"}, %arg1: !cirgen.buffer<1, mutable> {cirgen.argName = "data"}) -> !cirgen.constraint {
    %0 = cirgen.const 0
    %1 = cirgen.const 1
    %2 = cirgen.true
    %3 = cirgen.get %arg0[0] back 0 : <1, constant>
    %4 = cirgen.sub %0 : <default>, %3 : <default>
    %5 = cirgen.and_eqz %2, %4 : <default>
    %6 = cirgen.get %arg1[0] back 0 : <1, mutable>
    %7 = cirgen.sub %1 : <default>, %6 : <default>
    %8 = cirgen.mul %6 : <default>, %7 : <default>
    %9 = cirgen.and_eqz %5, %8 : <default>
    %10 = cirgen.sub %6 : <default>, %1 : <default>
    %11 = cirgen.and_eqz %9, %10 : <default>
    return %11 : !cirgen.constraint
  }
}